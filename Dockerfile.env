FROM ubuntu:20.04

# set env
ENV HOME=/root \
    DEBIAN_FRONTEND=noninteractive \
    LANG=ja_JP.UTF-8 \
    LC_ALL=${LANG} \
    LANGUAGE=${LANG} \
    TZ=Asia/Tokyo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone

# install packages
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    curl \
    firefox \
    fonts-takao \
    gedit \
    git \
    ibus-anthy \
    libbz2-dev \
    libffi-dev \
    liblzma-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    llvm \
    make \
    net-tools \
    python-opengl \
    python-openssl \
    software-properties-common \
    supervisor \
    tk-dev \
    vim-tiny \
    wget \
    x11vnc \
    xfce4 \
    xfce4-terminal \
    xvfb \
    xz-utils \
    zlib1g-dev \
    zsh \
    && \
    add-apt-repository ppa:jeremysanders/ppa && \
    apt-get update && \
    apt-get install -y \
    veusz \
    imagemagick

# zsh
SHELL ["/bin/zsh", "-c"]
RUN wget http://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh

# install noVNC
RUN mkdir -p /opt/noVNC/utils/websockify && \
    wget -qO- "http://github.com/novnc/noVNC/tarball/master" | tar -zx --strip-components=1 -C /opt/noVNC && \
    wget -qO- "https://github.com/novnc/websockify/tarball/master" | tar -zx --strip-components=1 -C /opt/noVNC/utils/websockify && \
    ln -s /opt/noVNC/vnc.html /opt/noVNC/index.html

# pyenv
RUN curl https://pyenv.run | zsh && \
    echo '' >> /root/.zshrc && \
    echo 'export PATH="/root/.pyenv/bin:$PATH"' >> /root/.zshrc && \
    echo 'eval "$(pyenv init -)"' >> /root/.zshrc && \
    echo 'eval "$(pyenv virtualenv-init -)"' >> /root/.zshrc
RUN source /root/.zshrc && \
    pyenv install 3.7.4 && \
    pyenv global 3.7.4
RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc && \
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc && \
    echo 'eval "$(pyenv init -)"' >> ~/.bashrc && \
    source ~/.bashrc

# install python lib
RUN mkdir /code
WORKDIR /code
ADD requirements.env.txt /code/
RUN source /root/.zshrc && \
    pip install -r requirements.env.txt --no-cache-dir

# rename user directories japanese to english.
RUN LANG=C xdg-user-dirs-update --force

EXPOSE 8080
COPY supervisord/* /etc/supervisor/conf.d/
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]
WORKDIR /root
